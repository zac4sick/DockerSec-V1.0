{
    "cis": [
        {
            "id": "1",
            "desc": "Host Configuration",
            "results": [
                {
                    "id": "1.1.1",
                    "desc": "Ensure a separate partition for containers has been created (Automated)",
                    "remediation": "For new installations, you should create a separate partition for the /var/lib/docker mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.",
                    "result": "WARN"
                },
                {
                    "id": "1.1.2",
                    "desc": "Ensure only trusted users are allowed to control Docker daemon (Automated)",
                    "remediation": "You should remove any untrusted users from the docker group using command sudo gpasswd -d <your-user> docker or add trusted users to the docker group using command sudo usermod -aG docker <your-user>. You should not create a mapping of sensitive directories from the host to container volumes.",
                    "result": "INFO",
                    "details": "doubtfulusers:  dush",
                    "items": [
                        "dush"
                    ]
                },
                {
                    "id": "1.1.3",
                    "desc": "Ensure auditing is configured for the Docker daemon (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/dockerd -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "WARN"
                },
                {
                    "id": "1.1.4",
                    "desc": "Ensure auditing is configured for Docker files and directories -/run/containerd (Automated)",
                    "remediation": "Install auditd. Add -a exit,always -F path=/run/containerd -F perm=war -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "WARN"
                },
                {
                    "id": "1.1.5",
                    "desc": "Ensure auditing is configured for Docker files and directories - /var/lib/docker (Automated)",
                    "remediation": "Install auditd. Add -w /var/lib/docker -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "1.1.6",
                    "desc": "Ensure auditing is configured for Docker files and directories - /etc/docker (Automated)",
                    "remediation": "Install auditd. Add -w /etc/docker -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "1.1.7",
                    "desc": "Ensure auditing is configured for Docker files and directories - docker.service (Automated)",
                    "remediation": "Install auditd. Add -w /usr/lib/systemd/system/docker.service -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.8",
                    "desc": "Ensure auditing is configured for Docker files and directories - containerd.sock (Automated)",
                    "remediation": "Install auditd. Add -w /usr/lib/systemd/system/containerd.socket -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.9",
                    "desc": "Ensure auditing is configured for Docker files and directories - docker.socket (Automated)",
                    "remediation": "Install auditd. Add -w /usr/lib/systemd/system/docker.socket -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.10",
                    "desc": "Ensure auditing is configured for Docker files and directories - /etc/default/docker (Automated)",
                    "remediation": "Install auditd. Add -w /etc/default/docker -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.11",
                    "desc": "Ensure auditing is configured for Dockerfiles and directories - /etc/docker/daemon.json (Automated)",
                    "remediation": "Install auditd. Add -w /etc/docker/daemon.json -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.12",
                    "desc": "1.1.12 Ensure auditing is configured for Dockerfiles and directories - /etc/containerd/config.toml (Automated)",
                    "remediation": "Install auditd. Add -w /etc/containerd/config.toml -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.13",
                    "desc": "Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker (Automated)",
                    "remediation": "Install auditd. Add -w /etc/sysconfig/docker -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.14",
                    "desc": "Ensure auditing is configured for Docker files and directories - /usr/bin/containerd (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/containerd -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.15",
                    "desc": "Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/containerd-shim -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.16",
                    "desc": "Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v1 (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/containerd-shim-runc-v1 -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.17",
                    "desc": "Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2 (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/containerd-shim-runc-v2 -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.1.18",
                    "desc": "Ensure auditing is configured for Docker files and directories - /usr/bin/runc (Automated)",
                    "remediation": "Install auditd. Add -w /usr/bin/runc -k docker to the /etc/audit/rules.d/audit.rules file. Then restart the audit daemon using command service auditd restart.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "1.2.1",
                    "desc": "Ensure the container host has been Hardened (Manual)",
                    "remediation": "You may consider various Security Benchmarks for your container host.",
                    "result": "INFO"
                },
                {
                    "id": "1.2.2",
                    "desc": "Ensure that the version of Docker is up to date (Manual)",
                    "remediation": "You should monitor versions of Docker releases and make sure your software is updated as required.",
                    "result": "INFO",
                    "details": "Using 20.10.10"
                }
            ]
        },
        {
            "id": "2",
            "desc": "Docker daemon configuration",
            "results": [
                {
                    "id": "2.1",
                    "desc": "Run the Docker daemon as a non-root user, if possible (Manual)",
                    "remediation": "Follow the current Dockerdocumentation on how to install the Docker daemon as a non-root user.",
                    "result": "INFO"
                },
                {
                    "id": "2.2",
                    "desc": "Ensure network traffic is restricted between containers on the default bridge (Scored)",
                    "remediation": "Edit the Docker daemon configuration file to ensure that inter-container communication is disabled: icc: false.",
                    "result": "WARN"
                },
                {
                    "id": "2.3",
                    "desc": "Ensure the logging level is set to 'info' (Scored)",
                    "remediation": "Ensure that the Docker daemon configuration file has the following configuration included log-level: info. Alternatively, run the Docker daemon as following: dockerd --log-level=info",
                    "result": "PASS"
                },
                {
                    "id": "2.4",
                    "desc": "Ensure Docker is allowed to make changes to iptables (Scored)",
                    "remediation": "Do not run the Docker daemon with --iptables=false option.",
                    "result": "PASS"
                },
                {
                    "id": "2.5",
                    "desc": "Ensure insecure registries are not used (Scored)",
                    "remediation": "You should ensure that no insecure registries are in use.",
                    "result": "PASS"
                },
                {
                    "id": "2.6",
                    "desc": "Ensure aufs storage driver is not used (Scored)",
                    "remediation": "Do not start Docker daemon as using dockerd --storage-driver aufs option.",
                    "result": "PASS"
                },
                {
                    "id": "2.7",
                    "desc": "Ensure TLS authentication for Docker daemon is configured (Scored)",
                    "remediation": "Follow the steps mentioned in the Docker documentation or other references. By default, TLS authentication is not configured.",
                    "result": "INFO",
                    "details": "Docker daemon not listening on TCP"
                },
                {
                    "id": "2.8",
                    "desc": "Ensure the default ulimit is configured appropriately (Manual)",
                    "remediation": "Run Docker in daemon mode and pass --default-ulimit as option with respective ulimits as appropriate in your environment and in line with your security policy. Example: dockerd --default-ulimit nproc=1024:2048 --default-ulimit nofile=100:200",
                    "result": "INFO",
                    "details": "Default ulimit doesn't appear to be set"
                },
                {
                    "id": "2.9",
                    "desc": "Enable user namespace support (Scored)",
                    "remediation": "Please consult the Docker documentation for various ways in which this can be configured depending upon your requirements. The high-level steps are: Ensure that the files /etc/subuid and /etc/subgid exist. Start the docker daemon with --userns-remap flag.",
                    "result": "WARN"
                },
                {
                    "id": "2.10",
                    "desc": "Ensure the default cgroup usage has been confirmed (Scored)",
                    "remediation": "The default setting is in line with good security practice and can be left in situ.",
                    "result": "PASS"
                },
                {
                    "id": "2.11",
                    "desc": "Ensure base device size is not changed until needed (Scored)",
                    "remediation": "Do not set --storage-opt dm.basesize until needed.",
                    "result": "PASS"
                },
                {
                    "id": "2.12",
                    "desc": "Ensure that authorization for Docker client commands is enabled (Scored)",
                    "remediation": "Install/Create an authorization plugin. Configure the authorization policy as desired. Start the docker daemon using command dockerd --authorization-plugin=<PLUGIN_ID>",
                    "result": "WARN"
                },
                {
                    "id": "2.13",
                    "desc": "Ensure centralized and remote logging is configured (Scored)",
                    "remediation": "Set up the desired log driver following its documentation. Start the docker daemon using that logging driver. Example: dockerd --log-driver=syslog --log-opt syslog-address=tcp://192.xxx.xxx.xxx",
                    "result": "WARN"
                },
                {
                    "id": "2.14",
                    "desc": "Ensure containers are restricted from acquiring new privileges (Scored)",
                    "remediation": "You should run the Docker daemon using command: dockerd --no-new-privileges",
                    "result": "WARN"
                },
                {
                    "id": "2.15",
                    "desc": "Ensure live restore is enabled (Scored)",
                    "remediation": "Run Docker in daemon mode and pass --live-restore option.",
                    "result": "WARN"
                },
                {
                    "id": "2.16",
                    "desc": "Ensure Userland Proxy is Disabled (Scored)",
                    "remediation": "You should run the Docker daemon using command: dockerd --userland-proxy=false",
                    "result": "WARN"
                },
                {
                    "id": "2.17",
                    "desc": "Ensure that a daemon-wide custom seccomp profile is applied if appropriate (Manual)",
                    "remediation": "By default, Docker's default seccomp profile is applied. If this is adequate for your environment, no action is necessary.",
                    "result": "PASS"
                },
                {
                    "id": "2.18",
                    "desc": "Ensure that experimental features are not implemented in production (Scored)",
                    "remediation": "You should not pass --experimental as a runtime parameter to the Docker daemon on production systems.",
                    "result": "INFO"
                }
            ]
        },
        {
            "id": "3",
            "desc": "Docker daemon configuration files",
            "results": [
                {
                    "id": "3.1",
                    "desc": "Ensure that the docker.service file ownership is set to root:root (Automated)",
                    "remediation": "Find out the file location: systemctl show -p FragmentPath docker.service. If the file does not exist, this recommendation is not applicable. If the file does exist, you should run the command chown root:root <path>, in order to set the ownership and group ownership for the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.2",
                    "desc": "Ensure that docker.service file permissions are appropriately set (Automated)",
                    "remediation": "Find out the file location: systemctl show -p FragmentPath docker.service. If the file does not exist, this recommendation is not applicable. If the file exists, run the command chmod 644 <path> to set the file permissions to 644.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.3",
                    "desc": "Ensure that docker.socket file ownership is set to root:root (Automated)",
                    "remediation": "Find out the file location: systemctl show -p FragmentPath docker.socket. If the file does not exist, this recommendation is not applicable. If the file exists, run the command chown root:root <path> to set the ownership and group ownership for the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.4",
                    "desc": "Ensure that docker.socket file permissions are set to 644 or more restrictive (Automated)",
                    "remediation": "Find out the file location: systemctl show -p FragmentPath docker.socket. If the file does not exist, this recommendation is not applicable. If the file does exist, you should run the command chmod 644 <path> to set the file permissions to 644.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.5",
                    "desc": "Ensure that the /etc/docker directory ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /etc/docker. This sets the ownership and group ownership for the directory to root.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "3.6",
                    "desc": "Ensure that /etc/docker directory permissions are set to 755 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 755 /etc/docker. This sets the permissions for the directory to 755.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "3.7",
                    "desc": "Ensure that registry certificate file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /etc/docker/certs.d/<registry-name>/*. This would set the individual ownership and group ownership for the registry certificate files to root.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "3.8",
                    "desc": "Ensure that registry certificate file permissions are set to 444 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 444 /etc/docker/certs.d/<registry-name>/*. This would set the permissions for the registry certificate files to 444.",
                    "result": "INFO",
                    "details": "Directory not found"
                },
                {
                    "id": "3.9",
                    "desc": "Ensure that TLS CA certificate file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root <path to TLS CA certificate file>. This sets the individual ownership and group ownership for the TLS CA certificate file to root.",
                    "result": "INFO",
                    "details": "No TLS CA certificate found"
                },
                {
                    "id": "3.10",
                    "desc": "Ensure that TLS CA certificate file permissions are set to 444 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 444 <path to TLS CA certificate file>. This sets the file permissions on the TLS CA file to 444.",
                    "result": "INFO",
                    "details": "No TLS CA certificate found"
                },
                {
                    "id": "3.11",
                    "desc": "Ensure that Docker server certificate file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root <path to Docker server certificate file>. This sets the individual ownership and the group ownership for the Docker server certificate file to root.",
                    "result": "INFO",
                    "details": "No TLS Server certificate found"
                },
                {
                    "id": "3.12",
                    "desc": "Ensure that the Docker server certificate file permissions are set to 444 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 444 <path to Docker server certificate file>. This sets the file permissions of the Docker server certificate file to 444.",
                    "result": "INFO",
                    "details": "No TLS Server certificate found"
                },
                {
                    "id": "3.13",
                    "desc": "Ensure that the Docker server certificate key file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root <path to Docker server certificate key file>. This sets the individual ownership and group ownership for the Docker server certificate key file to root.",
                    "result": "INFO",
                    "details": "No TLS Key found"
                },
                {
                    "id": "3.14",
                    "desc": "Ensure that the Docker server certificate key file permissions are set to 400 (Automated)",
                    "remediation": "You should run the following command: chmod 400 <path to Docker server certificate key file>. This sets the Docker server certificate key file permissions to 400.",
                    "result": "INFO",
                    "details": "No TLS Key found"
                },
                {
                    "id": "3.15",
                    "desc": "Ensure that the Docker socket file ownership is set to root:docker (Automated)",
                    "remediation": "You should run the following command: chown root:docker /var/run/docker.sock. This sets the ownership to root and group ownership to docker for the default Docker socket file.",
                    "result": "PASS"
                },
                {
                    "id": "3.16",
                    "desc": "Ensure that the Docker socket file permissions are set to 660 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 660 /var/run/docker.sock. This sets the file permissions of the Docker socket file to 660.",
                    "result": "PASS"
                },
                {
                    "id": "3.17",
                    "desc": "Ensure that the daemon.json file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /etc/docker/daemon.json. This sets the ownership and group ownership for the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.18",
                    "desc": "Ensure that daemon.json file permissions are set to 644 or more restrictive (Automated)",
                    "remediation": "You should run the following command: chmod 644 /etc/docker/daemon.json. This sets the file permissions for this file to 644.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.19",
                    "desc": "Ensure that the /etc/default/docker file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /etc/default/docker. This sets the ownership and group ownership of the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.20",
                    "desc": "Ensure that the /etc/sysconfig/docker file permissions are set to 644 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 644 /etc/sysconfig/docker. This sets the file permissions for this file to 644.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.21",
                    "desc": "Ensure that the /etc/sysconfig/docker file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /etc/sysconfig/docker. This sets the ownership and group ownership for the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.22",
                    "desc": "Ensure that the /etc/default/docker file permissions are set to 644 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 644 /etc/default/docker. This sets the file permissions for this file to 644.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.23",
                    "desc": "Ensure that the Containerd socket file ownership is set to root:root (Automated)",
                    "remediation": "You should run the following command: chown root:root /run/containerd/containerd.sock. This sets the ownership and group ownership for the file to root.",
                    "result": "INFO",
                    "details": "File not found"
                },
                {
                    "id": "3.24",
                    "desc": "Ensure that the Containerd socket file permissions are set to 660 or more restrictively (Automated)",
                    "remediation": "You should run the following command: chmod 660 /run/containerd/containerd.sock. This sets the file permissions for this file to 660.",
                    "result": "INFO",
                    "details": "File not found"
                }
            ]
        }
    ],
    "info": {
        "info": "Distributor ID:\tUbuntu\nDescription:\tUbuntu 20.04.4 LTS\nRelease:\t20.04\nCodename:\tfocal\n",
        "ip": "112.135.68.238"
    }
}